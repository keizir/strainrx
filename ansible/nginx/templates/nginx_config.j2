upstream {{ application_name }}_server {
        server 127.0.0.1:8000 fail_timeout=0;
}

server {
    listen      80;
    server_name {{ nginx_server_name }};
    rewrite     ^ https://$server_name$request_uri? permanent;
}

server {
    listen              443 ssl http2;
    server_name         {{ nginx_server_name }};
    {% if nginx_use_letsencrypt %}
    ssl_certificate     {{ certbot_output_dir }}/{{ certbot_cert_filename }};
    ssl_certificate_key {{ certbot_output_dir }}/{{ certbot_privkey_filename }};
    {% endif %}
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    {% if nginx_strong_dh_group %}
    ssl_dhparam          /etc/ssl/certs/dhparams.pem;
    {% endif %}
    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    client_max_body_size 50m;

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias   {{ nginx_static_dir }};
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    location / {
        proxy_redirect off;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host                   $http_host;
        proxy_set_header   X-NginX-Proxy    true;
        proxy_set_header   Connection "";
        proxy_http_version 1.1;
        proxy_pass         http://{{ application_name }}_server;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_path }}/{{ application_name }}/templates/;
    }

}