# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-12-13 16:42
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models

import django.contrib.gis.db.models.fields
from django.contrib.gis.geos import Point


def forwards_func(apps, schema_editor):
    to_update = apps.get_model('businesses', 'BusinessLocation').objects.filter(lat__isnull=False, lng__isnull=False)

    for location in to_update.iterator():
        location.geo_location = Point(location.lng, location.lat)
        location.save()


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('businesses', '0047_business_is_searchable'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeaturedBusinessLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured_datetime', models.DateTimeField(auto_now=True)),
                ('zip_code', models.CharField(db_index=True, max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='businesslocation',
            name='geo_location',
            field=django.contrib.gis.db.models.fields.PointField(db_index=True, geography=True, null=True, srid=4326),
        ),
        migrations.AlterField(
            model_name='businesslocation',
            name='zip_code',
            field=models.CharField(db_index=True, max_length=10),
        ),
        migrations.AddField(
            model_name='featuredbusinesslocation',
            name='business_location',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, related_name='featured', to='businesses.BusinessLocation'),
        ),
        migrations.AlterUniqueTogether(
            name='featuredbusinesslocation',
            unique_together=set([('business_location', 'zip_code')]),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
